#ifndef JOYSTICKWIDGET_H
#define JOYSTICKWIDGET_H

#include <QWidget>
#include <QPainter>
#include <QVector2D>
#include <QMouseEvent>
#include <math.h>

class JoystickWidget : public QWidget
{
    Q_OBJECT

private:
    QImage mBack;
    QColor mColor;
    int mSize;
    int mStacks;
    float mScale;
    float mPerspective;
    float r, R;
    QVector2D mPos;
    bool mRoundDomain;
    bool mCaptured;
    bool mAutoRepaint;

    void calcParams();
    void prepareBack();

protected:
    void paintEvent(QPaintEvent *);
    void resizeEvent(QResizeEvent *e);
    void mouseMoveEvent(QMouseEvent *e);
    void mousePressEvent(QMouseEvent *e);
    void mouseReleaseEvent(QMouseEvent *e);

public:
    explicit JoystickWidget(QWidget *parent = 0);

    QVector2D pos() const {return mPos;}
    float x() const {return mPos.x();}
    float y() const {return mPos.y();}
    bool isActive() const {return mCaptured;}
    
    void setColor(QColor color);
    void setRadius(float origin, float end);
    void setPerspective(float p);
    void setStacks(int count);
    void setRoundDomain();
    void setSquareDomain();

signals:
    void activated();
    void deactivated();
    
public slots:
    void setAutoRepaint(bool enabled);
};

#endif // JOYSTICKWIDGET_H
